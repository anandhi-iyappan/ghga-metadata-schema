type AccessionMixin
  {
    accession: String
  }

type Agent
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String
  }

type Analysis implements AccessionMixin
  {
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    id: String!
    title: String
    description: String
    hasInput: [File]
    hasStudy: Study
    hasWorkflow: Workflow
    hasAnalysisProcess: [AnalysisProcess]
    hasOutput: [File]
    accession: String
  }

type AnalysisProcess
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    title: String
    hasInput: [File]
    hasWorkflowStep: WorkflowStep
    hasAgent: Agent
    hasOutput: [File]
  }

type AnatomicalEntity implements OntologyClassMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String
  }

type Attribute
  {
    key: String!
    keyType: String
    value: String!
    valueType: String
  }

type AttributeMixin
  {
    hasAttribute: [Attribute]
  }

type BiologicalQuality
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type Biospecimen implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String
    hasIndividual: Individual
    hasAnatomicalEntity: AnatomicalEntity
    hasDisease: [Disease]
    hasPhenotypicFeature: [PhenotypicFeature]
    accession: String
  }

type CellLine
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type Cohort implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    hasMember: [Individual]
    accession: String
  }

type Committee
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
  }

type DataAccessCommittee implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String!
    description: String
    mainContact: Member
    hasMember: [Member]
    accession: String
  }

type DataAccessPolicy implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String!
    policyText: String!
    policyUrl: String
    hasDataAccessCommittee: DataAccessCommittee!
    hasDataUseCondition: [DataUseCondition]
    accession: String
  }

type DataTransformation
  {
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    id: String!
    title: String
    description: String
  }

type DataUseCondition
  {
    permission: String
    modifier: String
  }

type Dataset implements AccessionMixin, PublicationMixin, StatusMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    title: String!
    description: String!
    hasStudy: [Study]!
    hasExperiment: [Analysis]!
    hasSample: [Study]!
    hasAnalysis: [Study]!
    hasFile: [File]!
    hasDataAccessPolicy: [DataAccessPolicy]!
    type: String!
    hasPublication: [Publication]
    accession: String
    status: StatusEnum
  }

type DeprecatedMixin
  {
    replacedBy: NamedThing
    deprecationDate: String
  }

type Disease
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String
  }

type DiseaseOrPhenotypicFeature implements OntologyClassMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String
  }

type Donor
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    givenName: String
    familyName: String
    additionalName: String
    gender: String
    sex: BiologicalSexEnum!
    age: Integer!
    yearOfBirth: String
    vitalStatus: VitalStatusEnum!
    geographicalRegion: String
    ethnicity: String
    ancestry: String
    hasParent: [Individual]
    hasChildren: [Individual]
    hasDisease: [Disease]
    hasPhenotypicFeature: [PhenotypicFeature]
    accession: String
  }

type Experiment implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    biologicalReplicates: String
    technicalReplicates: String
    experimentalReplicates: String
    hasStudy: Study!
    hasSample: Sample!
    hasTechnology: Technology
    hasFile: [File]
    hasExperimentProcess: [ExperimentProcess]
    title: String!
    description: String!
    accession: String
  }

type ExperimentProcess
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    title: String
    hasInput: Sample
    hasProtocol: Protocol
    hasAgent: Agent
    hasOutput: File
  }

type Family implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    hasMember: [Individual]
    hasProband: Individual
    accession: String
  }

type File implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    name: String!
    format: String
    size: String
    checksum: String
    fileIndex: String
    category: String
    type: FileTypeEnum
    accession: String
  }

type Individual implements AccessionMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    givenName: String
    familyName: String
    additionalName: String
    gender: String
    sex: BiologicalSexEnum!
    age: Integer!
    yearOfBirth: String
    vitalStatus: VitalStatusEnum!
    geographicalRegion: String
    ethnicity: String
    ancestry: String
    hasParent: [Individual]
    hasChildren: [Individual]
    hasDisease: [Disease]
    hasPhenotypicFeature: [PhenotypicFeature]
    accession: String
  }

type InformationContentEntity
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type Investigation
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    title: String
    description: String
  }

type LibraryPreparationProtocol
  {
    id: String!
    creationDate: String
    updateDate: String
    url: String
    type: String
    xref: [String]
    libraryName: String!
    libraryLayout: String!
    libraryType: String!
    librarySelection: String!
    libraryConstruction: String!
    libraryPreparation: String!
    libraryLevel: String
    libraryConstructionKitRetailName: String!
    libraryConstructionKitManufacturer: String!
    primer: String
    endBias: String
    targetRegions: String
    rnaseqStrandedness: String
    name: String!
    description: String!
    hasAttribute: [Attribute]
  }

type MaterialEntity
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type Member
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    givenName: String
    familyName: String
    additionalName: String
    email: String!
    telephone: String!
    organization: String!
  }

type NamedThing
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type OntologyClassMixin
  {
    id: String!
    name: String
    description: String
  }

type Person
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    givenName: String
    familyName: String
    additionalName: String
  }

type PhenotypicFeature
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
    description: String
  }

type PlannedProcess
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type Population
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    name: String
  }

type Project implements AccessionMixin, AttributeMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    title: String!
    description: String!
    hasPublication: [Publication]
    hasAttribute: [Attribute]
    accession: String
  }

type Protocol implements AttributeMixin
  {
    id: String!
    creationDate: String
    updateDate: String
    name: String
    description: String
    url: String
    type: String
    xref: [String]
    hasAttribute: [Attribute]
  }

type Publication
  {
    creationDate: String
    updateDate: String
    type: String
    title: String
    abstract: String
    id: String!
    xref: [String]
  }

type PublicationMixin
  {
    hasPublication: Publication
  }

type ReleaseMixin
  {
    releaseDate: String
  }

type ResearchActivity
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    title: String
    description: String
  }

type Sample implements AccessionMixin
  {
    id: String!
    creationDate: String
    updateDate: String
    name: String!
    description: String!
    vitalStatusAtSampling: String
    tissue: String!
    isolation: String
    storage: String
    hasIndividual: Individual!
    hasBiospecimen: Biospecimen
    type: CaseControlEnum
    xref: [String]
    accession: String
  }

type SequencingProtocol
  {
    id: String!
    creationDate: String
    updateDate: String
    url: String
    type: String
    xref: [String]
    sequencingCenter: String!
    instrumentModel: String!
    readLength: String
    readPairNumber: String
    sequencingLength: String
    targetCoverage: String
    referenceAnnotation: String
    laneNumber: String
    flowCellId: String
    flowCellType: String
    umiBarcodeRead: String
    umiBarcodeSize: String
    umiBarcodeOffset: String
    cellBarcodeRead: String
    cellBarcodeOffset: String
    cellBarcodeSize: String
    sampleBarcodeRead: String
    name: String
    description: String
    hasAttribute: [Attribute]
  }

type StatusMixin
  {
    status: StatusEnum
  }

type Study implements AccessionMixin, PublicationMixin, AttributeMixin, StatusMixin, ReleaseMixin
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    affiliation: [String]!
    hasExperiment: [Experiment]
    hasAnalysis: [Analysis]
    hasProject: Project
    title: String!
    description: String!
    type: StudyTypeEnum!
    hasPublication: [Publication]
    hasAttribute: [Attribute]
    status: StatusEnum
    accession: String
    releaseDate: String
  }

type Submission implements StatusMixin
  {
    id: String!
    hasStudy: Study
    hasProject: Project
    hasSample: [Sample]
    hasBiospecimen: [Biospecimen]
    hasIndividual: [Individual]
    hasExperiment: [Experiment]
    hasAnalysis: [Analysis]
    hasFile: [File]
    hasDataAccessPolicy: DataAccessPolicy
    submissionDate: String
    creationDate: String
    updateDate: String
    status: StatusEnum
  }

type Technology
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type User
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    givenName: String
    familyName: String
    additionalName: String
    email: String
    role: UserRoleEnum
  }

type Workflow
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
  }

type WorkflowParameter
  {
    key: String
    value: String
  }

type WorkflowStep
  {
    id: String!
    xref: [String]
    creationDate: String
    updateDate: String
    type: String
    hasParameter: [WorkflowParameter]
  }


